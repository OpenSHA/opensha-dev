/*
 * opensha-dev dependencies
 */

apply plugin: 'java-library'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = "UTF-8"

repositories {
    jcenter()
}

configurations {
    apiResolvable {
        description 'resolvable view of the api classpath'
        canBeResolved=true

        extendsFrom api
    }
}

task fatJar(type: Jar, dependsOn: ':opensha:fatJar') {
    archiveBaseName = project.name + '-all'
    // include all 'api' dependencies
    from {
        configurations.apiResolvable.collect { it.isDirectory() ? it : zipTree(it).matching {
            exclude { it.path.contains('META-INF') }
        }}
    }
    // include compiled source from this project
    from sourceSets.main.allJava
    // include upstream project fat jar
    from zipTree(file('../opensha/build/libs/opensha-all.jar'))

    duplicatesStrategy = 'exclude'
    with jar
}

dependencies {

    implementation 'org.apache.pdfbox:pdfbox:2.0.6'
    implementation 'org.apache.commons:commons-collections4:4.1'
    api 'org.apache.commons:commons-compress:1.15'
    api 'uk.me.berndporr:iirj:1.0'
    implementation 'org.apache.spark:spark-core_2.12:3.0.1'
    implementation 'org.apache.spark:spark-mllib_2.12:3.0.1'
    implementation 'com.github.haifengl:smile-core:2.6.0'
    
    /* no remote repo */
    implementation files('lib/EventWebService.jar')
    api files('lib/flanagan.jar') // FFT and PSD library along with other tools

    implementation project(path: ':opensha')

    testImplementation 'junit:junit:4.12'
}
